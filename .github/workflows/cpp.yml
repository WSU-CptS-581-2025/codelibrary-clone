name: C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-ubuntu-gcc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install g++
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install g++-10
    - name: compile
      run: |
        cd cpp
        find . -name *.cpp -print0 | xargs -n1 -0 g++-10 -Wall -Wextra -std=c++20

  build-ubuntu-gcc-no-sign:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install g++
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install g++-10
    - name: compile
      run: |
        cd cpp
        find . -name *.cpp -print0 | xargs -n1 -0 g++-10 -Wall -Wextra -Wno-sign-compare -std=c++20

  build-ubuntu-gcc-analyzer:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install g++
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install g++-10
    - name: compile
      run: |
        cd cpp
        find . -name *.cpp -print0 | xargs -n1 -0 g++-10 -fanalyzer -Wno-analyzer-null-dereference -std=c++20

  build-ubuntu-gcc-7-warnings:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install g++-7
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install g++-7
    - name: compile
      run: |
        cd cpp
        find . -name *.cpp -print0 | xargs -n1 -0 g++-7 -Wall -Wextra -std=c++17

  build-ubuntu-clang:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install clang
      run: |
        sudo apt-key adv --fetch-keys https://apt.llvm.org/llvm-snapshot.gpg.key
        sudo add-apt-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main"
        #sudo apt-get update
        sudo apt-get install clang-10
    - name: compile
      run: |
        cd cpp
        find . -name *.cpp -print0 | xargs -n1 -0 clang++-10 -Wall -Wextra -std=c++20
  
  build-macos-clang:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: compile
      run: |
        cd cpp
        mkdir bits
        echo $'#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <deque>\n#include <stack>\n#include <iostream>\n#include <iomanip>\n#include <complex>\n#include <cassert>\n#include <random>\n#include <chrono>\n#include <functional>\n#include <array>\n#include <bitset>\n#include <numeric>\n' > bits/stdc++.h
        find . -name *.cpp -print0 | xargs -n1 -0 clang++ -Wall -Wextra -std=c++2a -isystem .

  build-macos-clang-no-sign:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: compile
      run: |
        cd cpp
        mkdir bits
        echo $'#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <deque>\n#include <stack>\n#include <iostream>\n#include <iomanip>\n#include <complex>\n#include <cassert>\n#include <random>\n#include <chrono>\n#include <functional>\n#include <array>\n#include <bitset>\n#include <numeric>\n' > bits/stdc++.h
        find . -name *.cpp -print0 | xargs -n1 -0 clang++ -Wall -Wextra -Wno-sign-compare -std=c++2a -isystem .

  build-windows-visual-cpp:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - name: compile
      run: |
        function Invoke-Environment {
            param
            (
                [Parameter(Mandatory=$true)]
                [string] $Command
            )
            $Command = "`"" + $Command + "`""
            cmd /c "$Command > nul 2>&1 && set" | . { process {
                if ($_ -match '^([^=]+)=(.*)') {
                    [System.Environment]::SetEnvironmentVariable($matches[1], $matches[2])
                }
            }}
        }
        cd cpp
        mkdir bits
        & C:\msys64\usr\bin\echo.exe -e '#include \74vector\76\n#include \74set\76\n#include \74map\76\n#include \74unordered_set\76\n#include \74unordered_map\76\n#include \74queue\76\n#include \74deque\76\n#include \74stack\76\n#include \74iostream\76\n#include \74iomanip\76\n#include \74complex\76\n#include \74cassert\76\n#include \74random\76\n#include \74chrono\76\n#include \74functional\76\n#include \74array\76\n#include \74bitset\76\n#include \74numeric\76\n' > bits\stdc++.h
        Invoke-Environment "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        cl /std:c++17 /EHsc /I . graphs/matchings/max_bipartite_matching_EV.cpp                  
        cl /std:c++17 /EHsc /I . graphs/matchings/max_bipartite_matching_hopcroft_karp_EsqrtV.cpp
        cl /std:c++17 /EHsc /I . graphs/matchings/max_general_matching_EsqrtV.cpp                
        cl /std:c++17 /EHsc /I . graphs/matchings/max_general_weighted_matching_EVlogV.cpp       
        cl /std:c++17 /EHsc /I . graphs/matchings/max_general_weighted_matching_V3.cpp           
        cl /std:c++17 /EHsc /I . graphs/matchings/ min_bipartite_weighted_matching_hungarian.cpp  
        cl /std:c++17 /EHsc /I . graphs/matchings/stable_matching.cpp                            
        cl /std:c++17 /EHsc /I . graphs/flows/global_min_cut_stoer_wagner.cpp 
        cl /std:c++17 /EHsc /I . graphs/flows/gomory_hu_tree.cpp              
        cl /std:c++17 /EHsc /I . graphs/flows/max_flow_dinic.cpp              
        cl /std:c++17 /EHsc /I . graphs/flows/max_flow_simple.cpp             
        cl /std:c++17 /EHsc /I . graphs/flows/min_cost_circulation.cpp        
        cl /std:c++17 /EHsc /I . graphs/flows/min_cost_flow_bf.cpp            
        cl /std:c++17 /EHsc /I . graphs/flows/min_cost_flow_dijkstra.cpp      
        cl /std:c++17 /EHsc /I . graphs/flows/max_flow_dinic.h                
        cl /std:c++17 /EHsc /I . graphs/cycle_detection.cpp       
        cl /std:c++17 /EHsc /I . graphs/dynamic_connectivity.cpp  
        cl /std:c++17 /EHsc /I . graphs/dynamic_connectivity2.cpp 
        cl /std:c++17 /EHsc /I . graphs/min_mean_cycle.cpp        
        cl /std:c++17 /EHsc /I . graphs/minimum_steiner_tree.cpp  
        cl /std:c++17 /EHsc /I . graphs/tree_centers.cpp          
        cl /std:c++17 /EHsc /I . graphs/structures/binary_heap.cpp                   
        cl /std:c++17 /EHsc /I . graphs/structures/centroid_decomposition.cpp        
        cl /std:c++17 /EHsc /I . graphs/structures/disjoint_sets.cpp                 
        cl /std:c++17 /EHsc /I . graphs/structures/disjoint_sets_ranked.cpp          
        cl /std:c++17 /EHsc /I . graphs/structures/fenwick_tree.cpp                  
        cl /std:c++17 /EHsc /I . graphs/structures/fenwick_tree_interval.cpp         
        cl /std:c++17 /EHsc /I . graphs/structures/fenwick_tree_on_map.cpp           
        cl /std:c++17 /EHsc /I . graphs/structures/heavy_light_decomposition.cpp     
        cl /std:c++17 /EHsc /I . graphs/structures/kd_tree.cpp                       
        cl /std:c++17 /EHsc /I . graphs/structures/link_cut_tree.cpp                 
        cl /std:c++17 /EHsc /I . graphs/structures/mos_with_updates.cpp              
        cl /std:c++17 /EHsc /I . graphs/structures/ordered_set.cpp                   
        cl /std:c++17 /EHsc /I . graphs/structures/queue_min.cpp                     
        cl /std:c++17 /EHsc /I . graphs/structures/segment_tree.cpp                  
        cl /std:c++17 /EHsc /I . graphs/structures/segment_tree_without_recursion.cpp
        cl /std:c++17 /EHsc /I . graphs/structures/sparse-segment-tree.cpp           
        cl /std:c++17 /EHsc /I . graphs/structures/sparse-table.cpp                  
        cl /std:c++17 /EHsc /I . graphs/structures/treap.cpp                         
        cl /std:c++17 /EHsc /I . graphs/structures/treap_bst.cpp                     
        cl /std:c++17 /EHsc /I . graphs/structures/treap_bst_shared_ptr.cpp          
        cl /std:c++17 /EHsc /I . graphs/structures/treap_indexed.cpp                 
        cl /std:c++17 /EHsc /I . graphs/structures/tree2d.cpp                        
        cl /std:c++17 /EHsc /I . graphs/structures/wavelet_tree.cpp                  
        ls -r -inc "*.cpp" | % { cl /std:c++17 /EHsc /I . $_.fullname } 
